# IMPORTANT: This file is generated by cucumber-rails - edit at your own peril.
# It is recommended to regenerate this file in the future when you upgrade to a
# newer version of cucumber-rails. Consider adding your own code to a new file
# instead of editing this one. Cucumber will automatically load all features/**/*.rb
# files.

require 'cucumber/rails'

# require 'cucumber/rails/rspec'

require 'capybara/rails'
require 'capybara/cucumber'
require 'capybara/session'
require 'capybara/poltergeist'

require 'email_spec'
require 'email_spec/cucumber'


# Capybara defaults to CSS3 selectors rather than XPath.
# If you'd prefer to use XPath, just uncomment this line and adjust any
# selectors in your step definitions to use the XPath syntax.
# Capybara.default_selector = :xpath
##
# Poltergeist - A PhantomJS driver for Capybara
# Take a look at https://github.com/teampoltergeist/poltergeist#customization for more customizations


if ENV['DEBUG']
  require 'pry'

  # Using poltergeist_debug you can insert page.driver.debug into your tests to pause the test
  # and launch a browser which gives you the WebKit inspector to view your test run with.
  Capybara.javascript_driver = :poltergeist_debug
  Capybara.register_driver :poltergeist_debug do |app|
    Capybara::Poltergeist::Driver.new(app, {
      inspector: true,
      timeout:   600,
      js_errors: true
    })
  end
else
  Capybara.javascript_driver = :poltergeist
  Capybara.register_driver :poltergeist do |app|
    Capybara::Poltergeist::Driver.new(app, {})
  end
end



# By default, any exception happening in your Rails application will bubble up
# to Cucumber so that your scenario will fail. This is a different from how
# your application behaves in the production environment, where an error page will
# be rendered instead.
#
# Sometimes we want to override this default behaviour and allow Rails to rescue
# exceptions and display an error page (just like when the app is running in production).
# Typical scenarios where you want to do this is when you test your error pages.
# There are two ways to allow Rails to rescue exceptions:
#
# 1) Tag your scenario (or feature) with @allow-rescue
#
# 2) Set the value below to true. Beware that doing this globally is not
# recommended as it will mask a lot of errors for you!
#
ActionController::Base.allow_rescue = false

# Remove/comment out the lines below if your app doesn't have a database.
# For some databases (like MongoDB and CouchDB) you may need to use :truncation instead.
begin
  DatabaseCleaner.strategy = :transaction
rescue NameError
  raise "You need to add database_cleaner to your Gemfile (in the :test group) if you wish to use it."
end

# You may also want to configure DatabaseCleaner to use different strategies for certain features and scenarios.
# See the DatabaseCleaner documentation for details. Example:
#
#   Before('@no-txn,@selenium,@culerity,@celerity,@javascript') do
#     # { :except => [:widgets] } may not do what you expect here
#     # as Cucumber::Rails::Database.javascript_strategy overrides
#     # this setting.
#     DatabaseCleaner.strategy = :truncation
#   end
#
#   Before('~@no-txn', '~@selenium', '~@culerity', '~@celerity', '~@javascript') do
#     DatabaseCleaner.strategy = :transaction
#   end
#

# Possible values are :truncation and :transaction
# The :transaction strategy is faster, but might give you threading problems.
# See https://github.com/cucumber/cucumber-rails/blob/master/features/choose_javascript_database_strategy.feature
Cucumber::Rails::Database.javascript_strategy = :truncation

# Base Crewmate configuration
Before do
  # Tests are written to target non-community version, except where noted (I am using the community version)
  Teambox.config.community = false
  Teambox.config.allow_signups = true
end















# # -*- encoding : utf-8 -*-
# # IMPORTANT: This file is generated by cucumber-rails - edit at your own peril.
# # It is recommended to regenerate this file in the future when you upgrade to a
# # newer version of cucumber-rails. Consider adding your own code to a new file
# # instead of editing this one. Cucumber will automatically load all features/**/*.rb
# # files.

# ENV["RAILS_ENV"] ||= 'cucumber'

# require File.expand_path(File.dirname(__FILE__) + '/../../config/environment')


# require 'pry' if ENV['DEBUG']

# require 'cucumber/formatter/unicode' # Remove this line if you don't want Cucumber Unicode support
# require 'cucumber/rails/rspec'
# require 'cucumber/rails/world'
# require 'cucumber/web/tableish'
# require 'cucumber/rspec/doubles'

# require 'capybara/rails'
# require 'capybara/cucumber'
# require 'capybara/session'
# require 'capybara/poltergeist'

# require 'email_spec'
# require 'email_spec/cucumber'


# # Capybara.default_wait_time = 2
# Capybara.default_selector = :css

# ##
# # Poltergeist - A PhantomJS driver for Capybara
# # Take a look at https://github.com/teampoltergeist/poltergeist#customization for more customizations
# Capybara.javascript_driver = :poltergeist
# Capybara.register_driver :poltergeist do |app|
#   Capybara::Poltergeist::Driver.new(app, {
#     # js_errors: false,
#     timeout: 600  # TODO: remove, only for debugging porpouse
#   })
# end

# # Using poltergeist_debug you can insert page.driver.debug into your tests to pause the test
# # and launch a browser which gives you the WebKit inspector to view your test run with.
# # Capybara.javascript_driver = :poltergeist_debug
# # Capybara.register_driver :poltergeist_debug do |app|
# #   Capybara::Poltergeist::Driver.new(app, {
# #     inspector: true,
# #     timeout:   600,
# #     js_errors: true
# #   })
# # end

# ##
# # DatabaseCleaner
# # How to clean your database when transactions are turned off. See
# # http://github.com/bmabey/database_cleaner for more info.
# if defined?(ActiveRecord::Base)
#   require 'database_cleaner'
#   DatabaseCleaner.strategy = :truncation
# end

# require 'rack/test'
# require 'rack/test/cookie_jar'

# Before do
#   # Tests are written to target non-community version, except where noted (I am using the community version)
#   Teambox.config.community = false
#   Teambox.config.allow_signups = true
# end
